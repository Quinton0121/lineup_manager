def on_lineup_click(event):
        print("You clicked the Lineup button!")
        with open("config.json", "r") as config_file:
            config = json.load(config_file)
        current_npg = config["npg"]  # Number per group
        print(f"Fetching {current_npg} people for the lineup...")

        # Update checked-in count and get data
        new_checked_in, df = update_checked_in_number(None)
        if isinstance(df, str):  # If data fetch fails
            print(f"Problem fetching data: {df}")
            lineup_display.controls = [ft.Text("Failed to fetch lineup", color=ft.colors.RED)]
        else:
            # Get the next group
            next_group = get_next_lineup(df, current_npg, interviewed)
            if not next_group:  # If no one’s left
                lineup_display.controls = [ft.Text("No more people to line up", color=ft.colors.RED)]
            else:
                # Update group number and config
                group_number = len(config.get("lineup_history", [])) + 1
                current_lineup[:] = next_group  # Set new lineup
                interviewed.extend([person["No"] for person in next_group])  # Mark them as interviewed
                config["current_lineup"] = current_lineup
                config["interviewed"] = interviewed
                lineup_history.append({
                    "group_number": group_number,
                    "people": next_group,
                    "npg": current_npg
                })
                config["lineup_history"] = lineup_history
                with open("config.json", "w") as config_file:
                    json.dump(config, config_file, indent=4)
                
                # Update data file
                with open('data.json', 'r') as data_file:
                    data = json.load(data_file)
                for person in next_group:
                    data['line'].append(person["No"])  # Add to lineup history
                data['npg'].append(current_npg)  # Record group size
                with open('data.json', 'w') as data_file:
                    json.dump(data, data_file, indent=4)

                # Refresh the display
                lineup_display.controls = [ft.Text(f"No: {person['No']} - {person['中文姓名']} - {person['timevalue']}") for person in current_lineup]
                progress_box.content = ft.Column(
                    [ft.Text("Check-in Status", size=20, weight="bold"), create_progress_bar(total_interviews, new_checked_in)],
                    spacing=10,
                    horizontal_alignment=ft.CrossAxisAlignment.CENTER,
                )
                print(f"Added Group #{group_number}: {[person['No'] for person in next_group]}")
                write_html()  # Call your custom HTML writer
        page.update()  # Refresh the page
