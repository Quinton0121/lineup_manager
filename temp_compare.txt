def on_lineup_click(event):
    print("You clicked the Lineup button!")
    with open("config.json", "r") as config_file:
        config = json.load(config_file)
    current_npg = config["npg"]  # Number per group
    print(f"Fetching {current_npg} people for the lineup...")

    # Update checked-in count and get data
    new_checked_in, df = update_checked_in_number(None)
    if isinstance(df, str):  # If data fetch fails
        print(f"Problem fetching data: {df}")
        lineup_display.controls = [ft.Text("Failed to fetch lineup", color=ft.colors.RED)]
    else:
        # Get the next group
        next_group = get_next_lineup(df, current_npg, interviewed)
        if not next_group:  # If no oneâ€™s left
            lineup_display.controls = [ft.Text("No more people to line up", color=ft.colors.RED)]
        else:
            # Convert "No" to integer for each person in next_group
            for person in next_group:
                person["No"] = int(person["No"])  # Remove decimal by converting to int

            # Update group number and config
            group_number = len(config.get("lineup_history", [])) + 1
            current_lineup[:] = next_group  # Set new lineup
            interviewed.extend([person["No"] for person in next_group])  # Mark them as interviewed
            config["current_lineup"] = current_lineup
            config["interviewed"] = interviewed
            lineup_history.append({
                "group_number": group_number,
                "people": next_group,
                "npg": current_npg
            })
            config["lineup_history"] = lineup_history
            with open("config.json", "w") as config_file:
                json.dump(config, config_file, indent=4)
            
            # Rest of the function remains unchanged...
            # Update data file, refresh display, write HTML, etc.